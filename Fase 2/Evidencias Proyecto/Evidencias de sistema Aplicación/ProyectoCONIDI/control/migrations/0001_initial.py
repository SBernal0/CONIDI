# Generated by Django 5.2.7 on 2025-10-16 06:29

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alergias',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_alergia', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom_ciudad', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(db_column='contro_ninol_id', primary_key=True, serialize=False)),
                ('nombre_control', models.CharField(max_length=200)),
                ('fecha_control_programada', models.DateField()),
                ('fecha_realizacion_control', models.DateField(blank=True, null=True)),
                ('estado_control', models.CharField(max_length=30)),
                ('pesokg', models.FloatField(blank=True, null=True)),
                ('talla_cm', models.FloatField(blank=True, null=True)),
                ('imc', models.FloatField(blank=True, null=True)),
                ('pc_cm', models.FloatField(blank=True, null=True, verbose_name='Perímetro Craneal (cm)')),
                ('calificacion_nutricional', models.CharField(blank=True, max_length=30, null=True)),
                ('calificacion_estatural', models.CharField(blank=True, choices=[('Talla Baja', 'Talla Baja'), ('Talla normal baja', 'Talla Normal Baja'), ('normal', 'Normal'), ('talla alta', 'Talla Alta'), ('talla normal alta', 'Talla Normal Alta')], max_length=30, null=True)),
                ('indi_antropometricos', models.CharField(blank=True, choices=[('PE', 'Peso/Edad'), ('PT', 'Peso/Talla'), ('TE', 'Talla/Edad')], max_length=10, null=True)),
                ('calificacion_pce', models.CharField(blank=True, choices=[('macrocefalia', 'Macrocefalia'), ('microcefalia', 'Microcefalia'), ('normal', 'Normal')], max_length=20, null=True)),
                ('dig_pa', models.CharField(blank=True, choices=[('Hipertensión Etapa 2', 'Hipertensión Etapa 2'), ('Sospecha de Hipertensión Etapa 1', 'Sospecha de Hipertensión Etapa 1'), ('Sospecha de Prehipertensión', 'Sospecha de Prehipertensión'), ('normal', 'Normal')], max_length=40, null=True, verbose_name='Diagnóstico Presión Arterial')),
                ('diag_des_integral', models.TextField(blank=True, null=True, verbose_name='Diagnóstico Desarrollo Integral')),
                ('obs_desarrollo_integral', models.TextField(blank=True, null=True, verbose_name='Observaciones Desarrollo Integral')),
                ('indicaciones', models.TextField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('derivacion', models.BooleanField(db_column='derivación', default=False)),
                ('consulta_dental_realizada', models.BooleanField(blank=True, null=True)),
                ('derivacion_dentista', models.BooleanField(blank=True, null=True)),
                ('fecha_proximo_control', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Control del Niño',
                'verbose_name_plural': 'Controles de Niños',
            },
        ),
        migrations.CreateModel(
            name='EntregaAlimentos',
            fields=[
                ('id', models.AutoField(db_column='id_entrega', primary_key=True, serialize=False)),
                ('fecha_entrega', models.DateField()),
                ('fecha_entrega_efectiva', models.DateField(blank=True, null=True)),
                ('entregado', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalControl',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='contro_ninol_id', db_index=True)),
                ('nombre_control', models.CharField(max_length=200)),
                ('fecha_control_programada', models.DateField()),
                ('fecha_realizacion_control', models.DateField(blank=True, null=True)),
                ('estado_control', models.CharField(max_length=30)),
                ('pesokg', models.FloatField(blank=True, null=True)),
                ('talla_cm', models.FloatField(blank=True, null=True)),
                ('imc', models.FloatField(blank=True, null=True)),
                ('pc_cm', models.FloatField(blank=True, null=True, verbose_name='Perímetro Craneal (cm)')),
                ('calificacion_nutricional', models.CharField(blank=True, max_length=30, null=True)),
                ('calificacion_estatural', models.CharField(blank=True, choices=[('Talla Baja', 'Talla Baja'), ('Talla normal baja', 'Talla Normal Baja'), ('normal', 'Normal'), ('talla alta', 'Talla Alta'), ('talla normal alta', 'Talla Normal Alta')], max_length=30, null=True)),
                ('indi_antropometricos', models.CharField(blank=True, choices=[('PE', 'Peso/Edad'), ('PT', 'Peso/Talla'), ('TE', 'Talla/Edad')], max_length=10, null=True)),
                ('calificacion_pce', models.CharField(blank=True, choices=[('macrocefalia', 'Macrocefalia'), ('microcefalia', 'Microcefalia'), ('normal', 'Normal')], max_length=20, null=True)),
                ('dig_pa', models.CharField(blank=True, choices=[('Hipertensión Etapa 2', 'Hipertensión Etapa 2'), ('Sospecha de Hipertensión Etapa 1', 'Sospecha de Hipertensión Etapa 1'), ('Sospecha de Prehipertensión', 'Sospecha de Prehipertensión'), ('normal', 'Normal')], max_length=40, null=True, verbose_name='Diagnóstico Presión Arterial')),
                ('diag_des_integral', models.TextField(blank=True, null=True, verbose_name='Diagnóstico Desarrollo Integral')),
                ('obs_desarrollo_integral', models.TextField(blank=True, null=True, verbose_name='Observaciones Desarrollo Integral')),
                ('indicaciones', models.TextField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('derivacion', models.BooleanField(db_column='derivación', default=False)),
                ('consulta_dental_realizada', models.BooleanField(blank=True, null=True)),
                ('derivacion_dentista', models.BooleanField(blank=True, null=True)),
                ('fecha_proximo_control', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Control del Niño',
                'verbose_name_plural': 'historical Controles de Niños',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPeriodoControl',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('mes_control', models.IntegerField()),
                ('nombre_mes_control', models.CharField(max_length=30)),
                ('dias_margen', models.IntegerField(default=7)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical periodo control',
                'verbose_name_plural': 'historical periodo controls',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Nino',
            fields=[
                ('rut_nino', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('ap_paterno', models.CharField(max_length=30)),
                ('ap_materno', models.CharField(blank=True, max_length=30, null=True)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=20)),
                ('direccion', models.CharField(max_length=200)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodoControl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mes_control', models.IntegerField()),
                ('nombre_mes_control', models.CharField(max_length=30)),
                ('dias_margen', models.IntegerField(default=7)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom_region', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroAlergias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_aparicion', models.DateTimeField()),
                ('fecha_remision', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vacuna',
            fields=[
                ('id', models.AutoField(db_column='vacuna_id', primary_key=True, serialize=False)),
                ('nom_vacuna', models.CharField(max_length=200)),
                ('descripcion', models.CharField(blank=True, max_length=200, null=True)),
                ('meses_programada', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VacunaAplicada',
            fields=[
                ('id', models.AutoField(db_column='vacuna_aplicada_id', primary_key=True, serialize=False)),
                ('fecha_programada', models.DateField()),
                ('fecha_aplicacion', models.DateField(blank=True, null=True)),
                ('dosis', models.CharField(blank=True, max_length=50, null=True)),
                ('lugar', models.CharField(blank=True, max_length=100, null=True)),
                ('negacion', models.BooleanField(default=False)),
                ('via', models.CharField(blank=True, choices=[('I.D', 'Intradérmica'), ('I.M', 'Intramuscular'), ('S.C', 'Subcutánea'), ('V.O', 'Vía Oral'), ('N/A', 'No Aplica')], max_length=10, null=True)),
                ('fecha_inoculacion', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom_comuna', models.CharField(max_length=50)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='control.ciudad')),
            ],
        ),
    ]
